name: build
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      # 安装环境
      - name: Install Enviroment
        run: |
          sudo apt-get update
          sudo apt-get install wget
          sudo apt-get install unar

      # 获取最新Release
      - name: Fetch
        run: |
          echo "开始下载"
          wget 'https://github.com/EhTagTranslation/EhSyringe/releases/latest/download/ehsyringe.chrome.zip'

      # 解压
      - name: Decompression
        run: |
          echo "开始解压："
          ls | egrep '\.(rar|zip)$'
          echo ""
          ls | egrep '\.(rar|zip)$' | xargs -d '\n' -n1 -i unar "{}"

      # 处理Manifest
      - name: Parse Manifest
        id: parse_manifest
        run: |
          npm install got
          echo "::set-output name=version::$(node parse.js)"
        env:
          GITHUB_TOKEN: ${{ github.token }}

      # 打包扩展
      - name: Pack ZIP
        uses: cardinalby/webext-buildtools-pack-extension-dir-action@v1
        with:
          extensionDir: 'ehsyringe.chrome'
          zipFilePath: 'build/extension.zip'

      - name: Pack CRX
        uses: cardinalby/webext-buildtools-chrome-crx-action@v2
        with:
          zipFilePath: 'build/extension.zip'
          crxFilePath: 'build/extension.crx'
          privateKey: ${{ secrets.CRX_PRIVATE_KEY }}
          updateXmlPath: 'build/update.xml'
          updateXmlCodebaseUrl: "https://github.com/${{ github.repository }}/releases/latest/download/extension.crx"

      # 发布Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: v${{ steps.parse_manifest.outputs.version }}
          release_name: v${{ steps.parse_manifest.outputs.version }}
          body: "自动更新到 v${{ steps.parse_manifest.outputs.version }} 版本"
          draft: false
          prerelease: false
      - name: Upload CRX
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/extension.crx
          asset_name: extension.crx
          asset_content_type: application/octet-stream
      - name: Upload XML
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/update.xml
          asset_name: update.xml
          asset_content_type: application/xml
